### YamlMime:TSType
name: BotSsoConfig
uid: '@microsoft/teamsfx.BotSsoConfig'
package: '@microsoft/teamsfx'
summary: Interface for SSO configuration for Bot SSO
fullName: BotSsoConfig
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: aad
    uid: '@microsoft/teamsfx.BotSsoConfig.aad'
    package: '@microsoft/teamsfx'
    summary: aad related configurations
    fullName: aad
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        aad: { scopes: string[] } & (AuthenticationConfiguration | ({
        authorityHost: string, clientId: string, tenantId: string } & {
        certificateContent?: never, clientSecret: string } & {
        initiateLoginEndpoint: string }) | ({ authorityHost: string, clientId:
        string, tenantId: string } & { certificateContent: string,
        clientSecret?: never } & { initiateLoginEndpoint: string }))
      return:
        description: ''
        type: >-
          { scopes: string[] } & (<xref
          uid="@microsoft/teamsfx.AuthenticationConfiguration" /> | ({
          authorityHost: string, clientId: string, tenantId: string } & {
          certificateContent?: never, clientSecret: string } & {
          initiateLoginEndpoint: string }) | ({ authorityHost: string, clientId:
          string, tenantId: string } & { certificateContent: string,
          clientSecret?: never } & { initiateLoginEndpoint: string }))
  - name: dialog
    uid: '@microsoft/teamsfx.BotSsoConfig.dialog'
    package: '@microsoft/teamsfx'
    summary: ''
    fullName: dialog
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        dialog?: { CustomBotSsoExecutionActivityHandler?: Object,
        conversationState?: ConversationState, dedupStorage?: Storage_2,
        ssoPromptConfig?: { endOnInvalidMessage?: boolean, timeout?: number },
        userState?: UserState }
      return:
        description: ''
        type: >-
          { CustomBotSsoExecutionActivityHandler?: Object, conversationState?:
          ConversationState, dedupStorage?: Storage_2, ssoPromptConfig?: {
          endOnInvalidMessage?: boolean, timeout?: number }, userState?:
          UserState }
