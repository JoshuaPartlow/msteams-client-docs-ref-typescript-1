### YamlMime:TSPackage
uid: '@microsoft/teamsfx'
name: '@microsoft/teamsfx'
summary: ''
type: package
enums:
  - '@microsoft/teamsfx.ErrorCode'
  - '@microsoft/teamsfx.LogLevel'
  - '@microsoft/teamsfx.ResourceType'
classes:
  - '@microsoft/teamsfx.DefaultTediousConnectionConfiguration'
  - '@microsoft/teamsfx.ErrorWithCode'
  - '@microsoft/teamsfx.M365TenantCredential'
  - '@microsoft/teamsfx.MsGraphAuthProvider'
  - '@microsoft/teamsfx.OnBehalfOfUserCredential'
  - '@microsoft/teamsfx.TeamsBotSsoPrompt'
  - '@microsoft/teamsfx.TeamsUserCredential'
interfaces:
  - '@microsoft/teamsfx.AuthenticationConfiguration'
  - '@microsoft/teamsfx.Configuration'
  - '@microsoft/teamsfx.Logger'
  - '@microsoft/teamsfx.ResourceConfiguration'
  - '@microsoft/teamsfx.TeamsBotSsoPromptSettings'
  - '@microsoft/teamsfx.TeamsBotSsoPromptTokenResponse'
  - '@microsoft/teamsfx.UserInfo'
typeAliases:
  - '@microsoft/teamsfx.LogFunction'
functions:
  - name: 'createMicrosoftGraphClient(TokenCredential, string | string[])'
    uid: '@microsoft/teamsfx.createMicrosoftGraphClient'
    package: '@microsoft/teamsfx'
    summary: Get Microsoft graph client.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        function createMicrosoftGraphClient(credential: TokenCredential,
        scopes?: string | string[])
      parameters:
        - id: credential
          type: TokenCredential
          description: token credential instance.
        - id: scopes
          type: 'string | string[]'
          description: >
            The array of Microsoft Token scope of access. Default value is
            `[.default]`.
      return:
        type: Client
        description: Graph client with specified scopes.
  - name: getAuthenticationConfiguration()
    uid: '@microsoft/teamsfx.getAuthenticationConfiguration'
    package: '@microsoft/teamsfx'
    summary: Get configuration for authentication.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: function getAuthenticationConfiguration()
      return:
        type: >-
          <xref uid="@microsoft/teamsfx.AuthenticationConfiguration" /> |
          undefined
        description: >-
          Authentication configuration from global configuration instance, the
          value may be undefined if no authentication config exists in current
          environment.
  - name: getLogLevel()
    uid: '@microsoft/teamsfx.getLogLevel'
    package: '@microsoft/teamsfx'
    summary: Get log level.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: function getLogLevel()
      return:
        type: <xref uid="@microsoft/teamsfx.LogLevel" />
        description: Log level
  - name: 'getResourceConfiguration(ResourceType, string)'
    uid: '@microsoft/teamsfx.getResourceConfiguration'
    package: '@microsoft/teamsfx'
    summary: Get configuration for a specific resource.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        function getResourceConfiguration(resourceType: ResourceType,
        resourceName?: string)
      parameters:
        - id: resourceType
          type: <xref uid="@microsoft/teamsfx.ResourceType" />
          description: The type of resource
        - id: resourceName
          type: string
          description: |
            The name of resource, default value is "default".
      return:
        type: '[key: string]\: any'
        description: >-
          Resource configuration for target resource from global configuration
          instance.
  - name: loadConfiguration(Configuration)
    uid: '@microsoft/teamsfx.loadConfiguration'
    package: '@microsoft/teamsfx'
    summary: >-
      Initialize configuration from environment variables or configuration
      object and set the global instance
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'function loadConfiguration(configuration?: Configuration)'
      parameters:
        - id: configuration
          type: <xref uid="@microsoft/teamsfx.Configuration" />
          description: >
            Optional configuration that overrides the default configuration
            values. The override depth is 1.
  - name: setLogFunction(LogFunction)
    uid: '@microsoft/teamsfx.setLogFunction'
    package: '@microsoft/teamsfx'
    summary: >-
      Set custom log function. Use the function if it's set. Priority is lower
      than setLogger.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'function setLogFunction(logFunction?: LogFunction)'
      parameters:
        - id: logFunction
          type: <xref uid="@microsoft/teamsfx.LogFunction" />
          description: >
            custom log function. If it's undefined, custom log function will be
            cleared.
  - name: setLogLevel(LogLevel)
    uid: '@microsoft/teamsfx.setLogLevel'
    package: '@microsoft/teamsfx'
    summary: Update log level helper.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'function setLogLevel(level: LogLevel)'
      parameters:
        - id: level
          type: <xref uid="@microsoft/teamsfx.LogLevel" />
          description: |
            log level in configuration
  - name: setLogger(Logger)
    uid: '@microsoft/teamsfx.setLogger'
    package: '@microsoft/teamsfx'
    summary: >-
      Set custom logger. Use the output function if it's set. Priority is higher
      than setLogFunction.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'function setLogger(logger?: Logger)'
      parameters:
        - id: logger
          type: <xref uid="@microsoft/teamsfx.Logger" />
          description: |
            custom logger. If it's undefined, custom logger will be cleared.
