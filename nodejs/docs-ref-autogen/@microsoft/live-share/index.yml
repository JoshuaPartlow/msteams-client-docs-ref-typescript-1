### YamlMime:TSPackage
uid: '@microsoft/live-share'
name: '@microsoft/live-share'
summary: ''
type: package
enums:
  - '@microsoft/live-share.ContainerState'
  - '@microsoft/live-share.FollowModeType'
  - '@microsoft/live-share.LiveDataObjectInitializeState'
  - '@microsoft/live-share.LiveEventEvents'
  - '@microsoft/live-share.LiveFollowModeEvents'
  - '@microsoft/live-share.LivePresenceEvents'
  - '@microsoft/live-share.LiveStateEvents'
  - '@microsoft/live-share.LiveTimerEvents'
  - '@microsoft/live-share.PresenceState'
  - '@microsoft/live-share.UserMeetingRole'
classes:
  - '@microsoft/live-share.AzureLiveShareHost'
  - '@microsoft/live-share.DynamicObjectRegistry'
  - '@microsoft/live-share.HostTimestampProvider'
  - '@microsoft/live-share.LiveDataObject'
  - '@microsoft/live-share.LiveEvent'
  - '@microsoft/live-share.LiveEventScope'
  - '@microsoft/live-share.LiveEventSource'
  - '@microsoft/live-share.LiveEventTarget'
  - '@microsoft/live-share.LiveEventTimer'
  - '@microsoft/live-share.LiveFollowMode'
  - '@microsoft/live-share.LivePresence'
  - '@microsoft/live-share.LivePresenceUser'
  - '@microsoft/live-share.LiveShareClient'
  - '@microsoft/live-share.LiveShareRuntime'
  - '@microsoft/live-share.LiveState'
  - '@microsoft/live-share.LiveTelemetryLogger'
  - '@microsoft/live-share.LiveTimer'
  - '@microsoft/live-share.LocalTimestampProvider'
  - '@microsoft/live-share.TestLiveShareHost'
  - '@microsoft/live-share.TimestampProvider'
interfaces:
  - '@microsoft/live-share.IClientInfo'
  - '@microsoft/live-share.IClientTimestamp'
  - '@microsoft/live-share.IContainerRuntimeSignaler'
  - '@microsoft/live-share.IEvent'
  - '@microsoft/live-share.IFluidContainerInfo'
  - '@microsoft/live-share.IFluidTenantInfo'
  - '@microsoft/live-share.IFollowModePresenceUserData'
  - '@microsoft/live-share.IFollowModeState'
  - '@microsoft/live-share.ILiveEvent'
  - '@microsoft/live-share.ILiveEventEvents'
  - '@microsoft/live-share.ILiveFollowModeEvents'
  - '@microsoft/live-share.ILivePresenceEvents'
  - '@microsoft/live-share.ILiveShareClientOptions'
  - '@microsoft/live-share.ILiveShareHost'
  - '@microsoft/live-share.ILiveShareJoinResults'
  - '@microsoft/live-share.ILiveStateEvents'
  - '@microsoft/live-share.ILiveTelemetryProperties'
  - '@microsoft/live-share.ILiveTimerEvents'
  - '@microsoft/live-share.INtpTimeInfo'
  - '@microsoft/live-share.IRuntimeSignaler'
  - '@microsoft/live-share.ITimerConfig'
  - '@microsoft/live-share.ITimerConfigData'
typeAliases:
  - '@microsoft/live-share.FollowModePresenceUser'
  - '@microsoft/live-share.GetLocalUserCanSend'
  - '@microsoft/live-share.LiveEventListener'
  - '@microsoft/live-share.UpdateSynchronizationState'
functions:
  - name: getLiveShareContainerSchemaProxy(ContainerSchema, LiveShareRuntime)
    uid: '@microsoft/live-share.getLiveShareContainerSchemaProxy'
    package: '@microsoft/live-share'
    summary: |-
      Inject Live Share dependencies into your Fluid container schema.
      This should only be done once, right before connecting to a container.
    remarks: >-
      Users should not use this method if you are connecting to a container
      using `LiveShareClient`.

      This is intended to be used when you are using another Fluid client, such
      as `AzureClient`.
    isDeprecated: false
    syntax:
      content: >-
        function getLiveShareContainerSchemaProxy(schema: ContainerSchema,
        liveRuntime: LiveShareRuntime): ContainerSchema
      parameters:
        - id: schema
          type: ContainerSchema
          description: Fluid ContainerSchema you would like to inject the runtime into
        - id: liveRuntime
          type: <xref uid="@microsoft/live-share.LiveShareRuntime" />
          description: LiveShareRuntime instance
      return:
        description: ContainerSchema with injected dependencies
        type: ContainerSchema
