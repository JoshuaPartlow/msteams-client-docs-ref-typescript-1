### YamlMime:UniversalReference
items:
  - uid: '@microsoft/teams-js.settings'
    name: settings
    fullName: settings
    children:
      - '@microsoft/teams-js.settings.getSettings'
      - '@microsoft/teams-js.settings.registerOnRemoveHandler'
      - '@microsoft/teams-js.settings.registerOnSaveHandler'
      - '@microsoft/teams-js.settings.RemoveEvent'
      - '@microsoft/teams-js.settings.SaveEvent'
      - '@microsoft/teams-js.settings.SaveParameters'
      - '@microsoft/teams-js.settings.setSettings'
      - '@microsoft/teams-js.settings.Settings'
      - '@microsoft/teams-js.settings.setValidityState'
    langs:
      - typeScript
    type: module
    summary: |-
      Namespace to interact with the settings-specific part of the SDK.
      This object is usable only on the settings frame.
    package: '@microsoft/teams-js'
  - uid: '@microsoft/teams-js.settings.getSettings'
    name: 'getSettings((instanceSettings: Settings) => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: Gets the settings for the current instance.
    syntax:
      content: 'function getSettings(callback: (instanceSettings: Settings) => void)'
      parameters:
        - id: callback
          type:
            - '(instanceSettings: Settings) => void'
          description: |
            The callback to invoke when the <xref:Settings> object is retrieved.
    package: '@microsoft/teams-js'
  - uid: '@microsoft/teams-js.settings.registerOnRemoveHandler'
    name: 'registerOnRemoveHandler((evt: RemoveEvent) => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Registers a handler for user attempts to remove content. This handler
      should be used

      to remove the underlying resource powering the content.

      The object passed to the handler must be used to indicate whether to
      proceed with the removal.

      Only one handler may be registered at a time. Subsequent registrations
      will override the first.
    syntax:
      content: 'function registerOnRemoveHandler(handler: (evt: RemoveEvent) => void)'
      parameters:
        - id: handler
          type:
            - '(evt: RemoveEvent) => void'
          description: |
            The handler to invoke when the user selects the remove button.
    package: '@microsoft/teams-js'
  - uid: '@microsoft/teams-js.settings.registerOnSaveHandler'
    name: 'registerOnSaveHandler((evt: SaveEvent) => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Registers a handler for when the user attempts to save the settings. This
      handler should be used

      to create or update the underlying resource powering the content.

      The object passed to the handler must be used to notify whether to proceed
      with the save.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    syntax:
      content: 'function registerOnSaveHandler(handler: (evt: SaveEvent) => void)'
      parameters:
        - id: handler
          type:
            - '(evt: SaveEvent) => void'
          description: |
            The handler to invoke when the user selects the save button.
    package: '@microsoft/teams-js'
  - uid: '@microsoft/teams-js.settings.setSettings'
    name: setSettings(Settings)
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Sets the settings for the current instance.

      This is an asynchronous operation; calls to getSettings are not guaranteed
      to reflect the changed state.
    syntax:
      content: 'function setSettings(instanceSettings: Settings)'
      parameters:
        - id: instanceSettings
          type:
            - '@microsoft/teams-js.settings.Settings'
          description: ''
    package: '@microsoft/teams-js'
  - uid: '@microsoft/teams-js.settings.setValidityState'
    name: setValidityState(boolean)
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Sets the validity state for the settings.

      The initial value is false, so the user cannot save the settings until
      this is called with true.
    syntax:
      content: 'function setValidityState(validityState: boolean)'
      parameters:
        - id: validityState
          type:
            - boolean
          description: |
            Indicates whether the save or remove button is enabled for the user.
    package: '@microsoft/teams-js'
references:
  - uid: '@microsoft/teams-js.settings.SaveParameters'
    name: SaveParameters
    spec.typeScript:
      - name: SaveParameters
        fullName: SaveParameters
        uid: '@microsoft/teams-js.settings.SaveParameters'
  - uid: '@microsoft/teams-js.settings.Settings'
    name: Settings
    spec.typeScript:
      - name: Settings
        fullName: Settings
        uid: '@microsoft/teams-js.settings.Settings'
  - uid: '@microsoft/teams-js.settings.getSettings'
    name: getSettings
  - uid: '@microsoft/teams-js.settings.registerOnRemoveHandler'
    name: registerOnRemoveHandler
  - uid: '@microsoft/teams-js.settings.registerOnSaveHandler'
    name: registerOnSaveHandler
  - uid: '@microsoft/teams-js.settings.RemoveEvent'
    name: RemoveEvent
  - uid: '@microsoft/teams-js.settings.SaveEvent'
    name: SaveEvent
  - uid: '@microsoft/teams-js.settings.setSettings'
    name: setSettings
  - uid: '@microsoft/teams-js.settings.setValidityState'
    name: setValidityState
