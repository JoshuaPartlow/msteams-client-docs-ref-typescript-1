### YamlMime:TSPackage
uid: '@microsoft/teams-js.microsoftTeams'
name: microsoftTeams
summary: ''
type: module
enums:
  - '@microsoft/teams-js.microsoftTeams.ChannelType'
  - '@microsoft/teams-js.microsoftTeams.ErrorCode'
  - '@microsoft/teams-js.microsoftTeams.FileOpenPreference'
  - '@microsoft/teams-js.microsoftTeams.FrameContexts'
  - '@microsoft/teams-js.microsoftTeams.HostClientType'
  - '@microsoft/teams-js.microsoftTeams.NotificationTypes'
  - '@microsoft/teams-js.microsoftTeams.TaskModuleDimension'
  - '@microsoft/teams-js.microsoftTeams.TeamType'
  - '@microsoft/teams-js.microsoftTeams.UserSettingTypes'
  - '@microsoft/teams-js.microsoftTeams.UserTeamRole'
classes:
  - '@microsoft/teams-js.microsoftTeams.ChildAppWindow'
  - '@microsoft/teams-js.microsoftTeams.Communication'
  - '@microsoft/teams-js.microsoftTeams.GlobalVars'
  - '@microsoft/teams-js.microsoftTeams.ParentAppWindow'
interfaces:
  - '@microsoft/teams-js.microsoftTeams.Context'
  - '@microsoft/teams-js.microsoftTeams.DeepLinkParameters'
  - '@microsoft/teams-js.microsoftTeams.FrameContext'
  - '@microsoft/teams-js.microsoftTeams.IAppWindow'
  - '@microsoft/teams-js.microsoftTeams.LocaleInfo'
  - '@microsoft/teams-js.microsoftTeams.MessageRequest'
  - '@microsoft/teams-js.microsoftTeams.MessageResponse'
  - '@microsoft/teams-js.microsoftTeams.SdkError'
  - '@microsoft/teams-js.microsoftTeams.ShowNotificationParameters'
  - '@microsoft/teams-js.microsoftTeams.TabInformation'
  - '@microsoft/teams-js.microsoftTeams.TabInstance'
  - '@microsoft/teams-js.microsoftTeams.TabInstanceParameters'
  - '@microsoft/teams-js.microsoftTeams.TaskInfo'
  - '@microsoft/teams-js.microsoftTeams.TeamInformation'
package: '@microsoft/teams-js'
functions:
  - name: 'callHandler(string, any[])'
    uid: '@microsoft/teams-js.microsoftTeams.callHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function callHandler(name: string, args?: any[])'
      parameters:
        - id: name
          type: string
          description: ''
        - id: args
          type: 'any[]'
          description: ''
      return:
        type: Object | Object
        description: ''
  - name: 'compareSDKVersions(string, string)'
    uid: '@microsoft/teams-js.microsoftTeams.compareSDKVersions'
    package: '@microsoft/teams-js'
    summary: Compares SDK versions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function compareSDKVersions(v1: string, v2: string)'
      parameters:
        - id: v1
          type: string
          description: first version
        - id: v2
          type: string
          description: |
            second version
            returns NaN in case inputs are not in right format
                    -1 if v1 < v2
                     1 if v1 > v2
                     0 otherwise
            For example,
               compareSDKVersions('1.2', '1.2.0') returns 0
               compareSDKVersions('1.2a', '1.2b') returns NaN
               compareSDKVersions('1.2', '1.3') returns -1
               compareSDKVersions('2.0', '1.3.2') returns 1
               compareSDKVersions('2.0', 2.0) returns NaN
      return:
        type: number
        description: ''
  - name: 'createFile(AssembleAttachment[], string)'
    uid: '@microsoft/teams-js.microsoftTeams.createFile'
    package: '@microsoft/teams-js'
    summary: Helper function to create a blob from media chunks based on their sequence
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createFile(assembleAttachment: AssembleAttachment[], mimeType:
        string)
      parameters:
        - id: assembleAttachment
          type: >-
            <xref
            uid="@microsoft/teams-js.microsoftTeams.media.AssembleAttachment"
            />[]
          description: ''
        - id: mimeType
          type: string
          description: ''
      return:
        type: Blob
        description: ''
  - name: 'decodeAttachment(MediaChunk, string)'
    uid: '@microsoft/teams-js.microsoftTeams.decodeAttachment'
    package: '@microsoft/teams-js'
    summary: >-
      Helper function to convert Media chunks into another object type which can
      be later assemebled

      Converts base 64 encoded string to byte array and then into an array of
      blobs
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function decodeAttachment(attachment: MediaChunk, mimeType: string)'
      parameters:
        - id: attachment
          type: <xref uid="@microsoft/teams-js.microsoftTeams.media.MediaChunk" />
          description: ''
        - id: mimeType
          type: string
          description: ''
      return:
        type: >-
          <xref
          uid="@microsoft/teams-js.microsoftTeams.media.AssembleAttachment" />
        description: ''
  - name: enablePrintCapability()
    uid: '@microsoft/teams-js.microsoftTeams.enablePrintCapability'
    package: '@microsoft/teams-js'
    summary: Enable print capability to support printing page using Ctrl+P and cmd+P
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function enablePrintCapability()
  - name: 'ensureInitialized(string[])'
    uid: '@microsoft/teams-js.microsoftTeams.ensureInitialized'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function ensureInitialized(expectedFrameContexts: string[])'
      parameters:
        - id: expectedFrameContexts
          type: 'string[]'
          description: ''
  - name: 'executeDeepLink(string, (status: boolean, reason?: string) => void)'
    uid: '@microsoft/teams-js.microsoftTeams.executeDeepLink'
    package: '@microsoft/teams-js'
    summary: execute deep link API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function executeDeepLink(deepLink: string, onComplete?: (status:
        boolean, reason?: string) => void)
      parameters:
        - id: deepLink
          type: string
          description: |
            deep link.
        - id: onComplete
          type: '(status: boolean, reason?: string) =&gt; void'
          description: ''
  - name: generateGUID()
    uid: '@microsoft/teams-js.microsoftTeams.generateGUID'
    package: '@microsoft/teams-js'
    summary: Generates a GUID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function generateGUID()
      return:
        type: string
        description: ''
  - name: 'generateRegExpFromUrls(string[])'
    uid: '@microsoft/teams-js.microsoftTeams.generateRegExpFromUrls'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function generateRegExpFromUrls(urls: string[])'
      parameters:
        - id: urls
          type: 'string[]'
          description: ''
      return:
        type: RegExp
        description: ''
  - name: 'getContext((context: Context) => void)'
    uid: '@microsoft/teams-js.microsoftTeams.getContext'
    package: '@microsoft/teams-js'
    summary: Retrieves the current context the frame is running in.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getContext(callback: (context: Context) => void)'
      parameters:
        - id: callback
          type: '(context: Context) =&gt; void'
          description: |
            The callback to invoke when the <xref:Context> object is retrieved.
  - name: getGenericOnCompleteHandler(string)
    uid: '@microsoft/teams-js.microsoftTeams.getGenericOnCompleteHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getGenericOnCompleteHandler(errorMessage?: string)'
      parameters:
        - id: errorMessage
          type: string
          description: ''
      return:
        type: '(success: boolean, reason?: string) =&gt; void'
        description: ''
  - name: >-
      getMruTabInstances((tabInfo: TabInformation) => void,
      TabInstanceParameters)
    uid: '@microsoft/teams-js.microsoftTeams.getMruTabInstances'
    package: '@microsoft/teams-js'
    summary: Allows an app to retrieve the most recently used tabs for this user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMruTabInstances(callback: (tabInfo: TabInformation) => void,
        tabInstanceParameters?: TabInstanceParameters)
      parameters:
        - id: callback
          type: '(tabInfo: TabInformation) =&gt; void'
          description: >-
            The callback to invoke when the <xref:TabInformation> object is
            retrieved.
        - id: tabInstanceParameters
          type: >-
            <xref uid="@microsoft/teams-js.microsoftTeams.TabInstanceParameters"
            />
          description: |
            OPTIONAL Ignored, kept for future use
  - name: 'getTabInstances((tabInfo: TabInformation) => void, TabInstanceParameters)'
    uid: '@microsoft/teams-js.microsoftTeams.getTabInstances'
    package: '@microsoft/teams-js'
    summary: >-
      Allows an app to retrieve for this user tabs that are owned by this app.

      If no TabInstanceParameters are passed, the app defaults to favorite teams
      and favorite channels.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTabInstances(callback: (tabInfo: TabInformation) => void,
        tabInstanceParameters?: TabInstanceParameters)
      parameters:
        - id: callback
          type: '(tabInfo: TabInformation) =&gt; void'
          description: >-
            The callback to invoke when the <xref:TabInstanceParameters> object
            is retrieved.
        - id: tabInstanceParameters
          type: >-
            <xref uid="@microsoft/teams-js.microsoftTeams.TabInstanceParameters"
            />
          description: >
            OPTIONAL Flags that specify whether to scope call to favorite teams
            or channels.
  - name: handleThemeChange(string)
    uid: '@microsoft/teams-js.microsoftTeams.handleThemeChange'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function handleThemeChange(theme: string)'
      parameters:
        - id: theme
          type: string
          description: ''
  - name: 'initialize(() => void, string[])'
    uid: '@microsoft/teams-js.microsoftTeams.initialize'
    package: '@microsoft/teams-js'
    summary: |-
      Initializes the library. This must be called before any other SDK calls
      but after the frame is loaded successfully.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function initialize(callback?: () => void, validMessageOrigins?:
        string[])
      parameters:
        - id: callback
          type: () =&gt; void
          description: >-
            Optionally specify a callback to invoke when Teams SDK has
            successfully initialized
        - id: validMessageOrigins
          type: 'string[]'
          description: >
            Optionally specify a list of cross frame message origins. There must
            have

            https: protocol otherwise they will be ignored. Example:
            https://www.example.com
  - name: 'initializeCommunication(Function, string[] | undefined)'
    uid: '@microsoft/teams-js.microsoftTeams.initializeCommunication'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function initializeCommunication(callback: Function,
        validMessageOrigins: string[] | undefined)
      parameters:
        - id: callback
          type: Function
          description: ''
        - id: validMessageOrigins
          type: 'string[] | undefined'
          description: ''
  - name: initializeHandlers()
    uid: '@microsoft/teams-js.microsoftTeams.initializeHandlers'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function initializeHandlers()
  - name: initializePrivateApis()
    uid: '@microsoft/teams-js.microsoftTeams.initializePrivateApis'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function initializePrivateApis()
  - name: 'initializeWithFrameContext(FrameContext, () => void, string[])'
    uid: '@microsoft/teams-js.microsoftTeams.initializeWithFrameContext'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function initializeWithFrameContext(frameContext: FrameContext,
        callback?: () => void, validMessageOrigins?: string[])
      parameters:
        - id: frameContext
          type: <xref uid="@microsoft/teams-js.microsoftTeams.FrameContext" />
          description: ''
        - id: callback
          type: () =&gt; void
          description: ''
        - id: validMessageOrigins
          type: 'string[]'
          description: ''
  - name: isAPISupportedByPlatform(string)
    uid: '@microsoft/teams-js.microsoftTeams.isAPISupportedByPlatform'
    package: '@microsoft/teams-js'
    summary: >-
      Checks whether the platform has knowledge of this API by doing a
      comparison

      on API required version and platform supported version of the SDK
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isAPISupportedByPlatform(requiredVersion?: string)'
      parameters:
        - id: requiredVersion
          type: string
          description: |
            SDK version required by the API
      return:
        type: boolean
        description: ''
  - name: isMediaCallForVideoAndImageInputs(MediaInputs)
    uid: '@microsoft/teams-js.microsoftTeams.isMediaCallForVideoAndImageInputs'
    package: '@microsoft/teams-js'
    summary: >-
      Returns true if the mediaInput params are called for mediatype
      VideoAndImage and false otherwise
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isMediaCallForVideoAndImageInputs(mediaInputs: MediaInputs)'
      parameters:
        - id: mediaInputs
          type: <xref uid="@microsoft/teams-js.microsoftTeams.media.MediaInputs" />
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'navigateBack((status: boolean, reason?: string) => void)'
    uid: '@microsoft/teams-js.microsoftTeams.navigateBack'
    package: '@microsoft/teams-js'
    summary: >-
      Navigates back in the Teams client. See registerBackButtonHandler for more
      information on when

      it's appropriate to use this method.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function navigateBack(onComplete?: (status: boolean, reason?: string) =>
        void)
      parameters:
        - id: onComplete
          type: '(status: boolean, reason?: string) =&gt; void'
          description: ''
  - name: 'navigateCrossDomain(string, (status: boolean, reason?: string) => void)'
    uid: '@microsoft/teams-js.microsoftTeams.navigateCrossDomain'
    package: '@microsoft/teams-js'
    summary: >-
      Navigates the frame to a new cross-domain URL. The domain of this URL must
      match at least one of the

      valid domains specified in the validDomains block of the manifest;
      otherwise, an exception will be

      thrown. This function needs to be used only when navigating the frame to a
      URL in a different domain

      than the current one in a way that keeps the app informed of the change
      and allows the SDK to

      continue working.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function navigateCrossDomain(url: string, onComplete?: (status: boolean,
        reason?: string) => void)
      parameters:
        - id: url
          type: string
          description: |
            The URL to navigate the frame to.
        - id: onComplete
          type: '(status: boolean, reason?: string) =&gt; void'
          description: ''
  - name: 'navigateToTab(TabInstance, (status: boolean, reason?: string) => void)'
    uid: '@microsoft/teams-js.microsoftTeams.navigateToTab'
    package: '@microsoft/teams-js'
    summary: Navigates the Microsoft Teams app to the specified tab instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function navigateToTab(tabInstance: TabInstance, onComplete?: (status:
        boolean, reason?: string) => void)
      parameters:
        - id: tabInstance
          type: <xref uid="@microsoft/teams-js.microsoftTeams.TabInstance" />
          description: |
            The tab instance to navigate to.
        - id: onComplete
          type: '(status: boolean, reason?: string) =&gt; void'
          description: ''
  - name: print()
    uid: '@microsoft/teams-js.microsoftTeams.print'
    package: '@microsoft/teams-js'
    summary: default print handler
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function print()
  - name: 'processAdditionalValidOrigins(string[])'
    uid: '@microsoft/teams-js.microsoftTeams.processAdditionalValidOrigins'
    package: '@microsoft/teams-js'
    summary: >-
      Processes the valid origins specifuied by the user, de-duplicates and
      converts them into a regexp

      which is used later for message source/origin validation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function processAdditionalValidOrigins(validMessageOrigins: string[])'
      parameters:
        - id: validMessageOrigins
          type: 'string[]'
          description: ''
  - name: registerAppButtonClickHandler(() => void)
    uid: '@microsoft/teams-js.microsoftTeams.registerAppButtonClickHandler'
    package: '@microsoft/teams-js'
    summary: >-
      Registers a handler for clicking the app button.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function registerAppButtonClickHandler(handler: () => void)'
      parameters:
        - id: handler
          type: () =&gt; void
          description: >
            The handler to invoke when the personal app button is clicked in the
            app bar.
  - name: registerAppButtonHoverEnterHandler(() => void)
    uid: '@microsoft/teams-js.microsoftTeams.registerAppButtonHoverEnterHandler'
    package: '@microsoft/teams-js'
    summary: >-
      Registers a handler for entering hover of the app button.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function registerAppButtonHoverEnterHandler(handler: () => void)'
      parameters:
        - id: handler
          type: () =&gt; void
          description: >
            The handler to invoke when entering hover of the personal app button
            in the app bar.
  - name: registerAppButtonHoverLeaveHandler(() => void)
    uid: '@microsoft/teams-js.microsoftTeams.registerAppButtonHoverLeaveHandler'
    package: '@microsoft/teams-js'
    summary: >-
      Registers a handler for exiting hover of the app button.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function registerAppButtonHoverLeaveHandler(handler: () => void)'
      parameters:
        - id: handler
          type: () =&gt; void
          description: >
            The handler to invoke when exiting hover of the personal app button
            in the app bar.
  - name: registerBackButtonHandler(() => boolean)
    uid: '@microsoft/teams-js.microsoftTeams.registerBackButtonHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function registerBackButtonHandler(handler: () => boolean)'
      parameters:
        - id: handler
          type: () =&gt; boolean
          description: ''
  - name: registerBackButtonHandler(() => boolean)
    uid: '@microsoft/teams-js.microsoftTeams.registerBackButtonHandler_1'
    package: '@microsoft/teams-js'
    summary: >-
      Registers a handler for user presses of the Team client's back button.
      Experiences that maintain an internal

      navigation stack should use this handler to navigate the user back within
      their frame. If an app finds

      that after running its back button handler it cannot handle the event it
      should call the navigateBack

      method to ask the Teams client to handle it instead.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function registerBackButtonHandler(handler: () => boolean)'
      parameters:
        - id: handler
          type: () =&gt; boolean
          description: >
            The handler to invoke when the user presses their Team client's back
            button.
  - name: registerEnterSettingsHandler(() => void)
    uid: '@microsoft/teams-js.microsoftTeams.registerEnterSettingsHandler'
    package: '@microsoft/teams-js'
    summary: Registers a handler for when the user reconfigurated tab
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function registerEnterSettingsHandler(handler: () => void)'
      parameters:
        - id: handler
          type: () =&gt; void
          description: |
            The handler to invoke when the user click on Settings.
  - name: 'registerFullScreenHandler((isFullScreen: boolean) => void)'
    uid: '@microsoft/teams-js.microsoftTeams.registerFullScreenHandler'
    package: '@microsoft/teams-js'
    summary: >-
      Registers a handler for changes from or to full-screen view for a tab.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function registerFullScreenHandler(handler: (isFullScreen: boolean) =>
        void)
      parameters:
        - id: handler
          type: '(isFullScreen: boolean) =&gt; void'
          description: >
            The handler to invoke when the user toggles full-screen view for a
            tab.
  - name: 'registerHandler(string, Function, boolean, any[])'
    uid: '@microsoft/teams-js.microsoftTeams.registerHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function registerHandler(name: string, handler: Function, sendMessage?:
        boolean, args?: any[])
      parameters:
        - id: name
          type: string
          description: ''
        - id: handler
          type: Function
          description: ''
        - id: sendMessage
          type: boolean
          description: ''
        - id: args
          type: 'any[]'
          description: ''
  - name: 'registerOnThemeChangeHandler((theme: string) => void)'
    uid: '@microsoft/teams-js.microsoftTeams.registerOnThemeChangeHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function registerOnThemeChangeHandler(handler: (theme: string) => void)'
      parameters:
        - id: handler
          type: '(theme: string) =&gt; void'
          description: ''
  - name: 'registerOnThemeChangeHandler((theme: string) => void)'
    uid: '@microsoft/teams-js.microsoftTeams.registerOnThemeChangeHandler_1'
    package: '@microsoft/teams-js'
    summary: >-
      Registers a handler for theme changes.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function registerOnThemeChangeHandler(handler: (theme: string) => void)'
      parameters:
        - id: handler
          type: '(theme: string) =&gt; void'
          description: |
            The handler to invoke when the user changes their theme.
  - name: removeHandler(string)
    uid: '@microsoft/teams-js.microsoftTeams.removeHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeHandler(name: string)'
      parameters:
        - id: name
          type: string
          description: ''
  - name: returnFocus(boolean)
    uid: '@microsoft/teams-js.microsoftTeams.returnFocus'
    package: '@microsoft/teams-js'
    summary: >-
      Return focus to the main Teams app. Will focus search bar if navigating
      forward and app bar if navigating back.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function returnFocus(navigateForward?: boolean)'
      parameters:
        - id: navigateForward
          type: boolean
          description: |
            Determines the direction to focus in teams app.
  - name: 'sendMessageEventToChild(string, any[])'
    uid: '@microsoft/teams-js.microsoftTeams.sendMessageEventToChild'
    package: '@microsoft/teams-js'
    summary: |-
      Send a custom message object that can be sent to child window,
      instead of a response message to a child
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendMessageEventToChild(actionName: string, args?: any[])'
      parameters:
        - id: actionName
          type: string
          description: ''
        - id: args
          type: 'any[]'
          description: ''
  - name: 'sendMessageToParent(string, any[], Function)'
    uid: '@microsoft/teams-js.microsoftTeams.sendMessageToParent_1'
    package: '@microsoft/teams-js'
    summary: >-
      Send a message to parent. Uses nativeInterface on mobile to communicate
      with parent context
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendMessageToParent(actionName: string, args: any[], callback?:
        Function)
      parameters:
        - id: actionName
          type: string
          description: ''
        - id: args
          type: 'any[]'
          description: ''
        - id: callback
          type: Function
          description: ''
  - name: 'sendMessageToParent(string, Function)'
    uid: '@microsoft/teams-js.microsoftTeams.sendMessageToParent'
    package: '@microsoft/teams-js'
    summary: >-
      Send a message to parent. Uses nativeInterface on mobile to communicate
      with parent context
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendMessageToParent(actionName: string, callback?: Function)'
      parameters:
        - id: actionName
          type: string
          description: ''
        - id: callback
          type: Function
          description: ''
  - name: setFrameContext(FrameContext)
    uid: '@microsoft/teams-js.microsoftTeams.setFrameContext'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setFrameContext(frameContext: FrameContext)'
      parameters:
        - id: frameContext
          type: <xref uid="@microsoft/teams-js.microsoftTeams.FrameContext" />
          description: ''
  - name: shareDeepLink(DeepLinkParameters)
    uid: '@microsoft/teams-js.microsoftTeams.shareDeepLink'
    package: '@microsoft/teams-js'
    summary: >-
      Shares a deep link that a user can use to navigate back to a specific
      state in this page.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function shareDeepLink(deepLinkParameters: DeepLinkParameters)'
      parameters:
        - id: deepLinkParameters
          type: <xref uid="@microsoft/teams-js.microsoftTeams.DeepLinkParameters" />
          description: |
            ID and label for the link and fallback URL.
  - name: uninitializeCommunication()
    uid: '@microsoft/teams-js.microsoftTeams.uninitializeCommunication'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function uninitializeCommunication()
  - name: 'validateGetMediaInputs(string, FileFormat, string)'
    uid: '@microsoft/teams-js.microsoftTeams.validateGetMediaInputs'
    package: '@microsoft/teams-js'
    summary: Returns true if the get Media params are valid and false otherwise
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function validateGetMediaInputs(mimeType: string, format: FileFormat,
        content: string)
      parameters:
        - id: mimeType
          type: string
          description: ''
        - id: format
          type: <xref uid="@microsoft/teams-js.microsoftTeams.media.FileFormat" />
          description: ''
        - id: content
          type: string
          description: ''
      return:
        type: boolean
        description: ''
  - name: validatePeoplePickerInput(PeoplePickerInputs)
    uid: '@microsoft/teams-js.microsoftTeams.validatePeoplePickerInput'
    package: '@microsoft/teams-js'
    summary: Returns true if the people picker params are valid and false otherwise
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function validatePeoplePickerInput(peoplePickerInputs:
        PeoplePickerInputs)
      parameters:
        - id: peoplePickerInputs
          type: >-
            <xref
            uid="@microsoft/teams-js.microsoftTeams.people.PeoplePickerInputs"
            />
          description: ''
      return:
        type: boolean
        description: ''
  - name: validateScanBarCodeInput(BarCodeConfig)
    uid: '@microsoft/teams-js.microsoftTeams.validateScanBarCodeInput'
    package: '@microsoft/teams-js'
    summary: Returns true if the scan barcode param is valid and false otherwise
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function validateScanBarCodeInput(barCodeConfig: BarCodeConfig)'
      parameters:
        - id: barCodeConfig
          type: >-
            <xref uid="@microsoft/teams-js.microsoftTeams.media.BarCodeConfig"
            />
          description: ''
      return:
        type: boolean
        description: ''
  - name: validateSelectMediaInputs(MediaInputs)
    uid: '@microsoft/teams-js.microsoftTeams.validateSelectMediaInputs'
    package: '@microsoft/teams-js'
    summary: Returns true if the mediaInput params are valid and false otherwise
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function validateSelectMediaInputs(mediaInputs: MediaInputs)'
      parameters:
        - id: mediaInputs
          type: <xref uid="@microsoft/teams-js.microsoftTeams.media.MediaInputs" />
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'validateViewImagesInput(ImageUri[])'
    uid: '@microsoft/teams-js.microsoftTeams.validateViewImagesInput'
    package: '@microsoft/teams-js'
    summary: Returns true if the view images param is valid and false otherwise
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function validateViewImagesInput(uriList: ImageUri[])'
      parameters:
        - id: uriList
          type: '<xref uid="@microsoft/teams-js.microsoftTeams.media.ImageUri" />[]'
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'waitForMessageQueue(Window, () => void)'
    uid: '@microsoft/teams-js.microsoftTeams.waitForMessageQueue'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function waitForMessageQueue(targetWindow: Window, callback: () => void)'
      parameters:
        - id: targetWindow
          type: Window
          description: ''
        - id: callback
          type: () =&gt; void
          description: ''
